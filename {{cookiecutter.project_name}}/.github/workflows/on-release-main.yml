on:
  release:
    types: [published]
    branches: [main]

name: release-main

jobs:

  quality:
    runs-on: ubuntu-latest
    steps:
    
      - name: Check out
        uses: actions/checkout@v2

      - name: Set up the environment
        uses: ./.github/actions/setup-poetry-env

      - name: Run checks
        uses: ./.github/actions/run-checks

      {%- if cookiecutter.mkdocs == "y" %}

      - name: Documentation Test
        run: |
          source .venv/bin/activate
          make docs-test
      {%- endif %} 

  {%- if cookiecutter.tox== "y" %}

  tox:
    needs: quality
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.8', '3.9', '3.10']
    steps:
      - name: Check out
        uses: actions/checkout@v2

      - name: Set up the environment
        uses: ./.github/actions/setup-poetry-env
        with: 
          python-version: {% raw %}${{ matrix.python-version }}{% endraw %}

      - name: Test with tox 
        run: |
          source .venv/bin/activate
          poetry add tox-gh-actions
          tox
  {%- endif %}

  {%- if cookiecutter.publish_to != "none" %}

  publish:
      runs-on: ubuntu-latest
      needs: {% if cookiecutter.tox== "y" -%}
                tox
            {%- else -%}
            quality
            {%- endif %}
      steps:

        - name: Check out
          uses: actions/checkout@v2

        - name: Set up the environment
          uses: ./.github/actions/setup-poetry-env

        - name: Set output
          id: vars
          run: echo ::set-output name=tag::${GITHUB_REF#refs/*/}
        
        - name: Build and publish
          run: |
            source .venv/bin/activate
            poetry version $RELEASE_VERSION
            make build-and-publish
          env: 
            {% if cookiecutter.publish_to == "pypi" -%}
            {%- raw -%}
            PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
            RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
            {%- endraw -%}
            {%- elif cookiecutter.publish_to == "artifactory" -%}
            {%- raw -%}
            ARTIFACTORY_URL: ${{ secrets.ARTIFACTORY_URL }}
            ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
            ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
            RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
            {%- endraw -%}
            {%- endif %}
  {%- endif %}

  {%- if cookiecutter.mkdocs == "y" %}

  documentation:
    runs-on: ubuntu-latest
    needs: {% if cookiecutter.publish_to != "none" -%}
              publish
           {%- elif cookiecutter.tox== "y" -%}
              tox
           {%- else -%}
              quality
           {%- endif %}
    steps:

      - name: Check out
        uses: actions/checkout@v2

      - name: Set up the environment
        uses: ./.github/actions/setup-poetry-env
        
      - name: Generate documentation
        run: |
            source .venv/bin/activate
            mkdocs gh-deploy --force
  {%- endif %}