name: release-main

on:
  release:
    types: [published]
    branches: [main]

jobs:
  {% if cookiecutter.publish_to != "none" %}
  publish:
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Set up the environment
        uses: ./.github/actions/setup-poetry-env

      - name: Export tag
        id: vars
        run: {% raw %}echo tag=${GITHUB_REF#refs/*/} >> $GITHUB_OUTPUT{% endraw %}

      - name: Build and publish
        run: |
          source .venv/bin/activate
          poetry version $RELEASE_VERSION
          make build-and-publish
        env:
          {% if cookiecutter.publish_to == "pypi" -%}
          {%- raw -%}
          PYPI_TOKEN: ${{ secrets.PYPI_TOKEN }}
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
          {%- endraw -%}
          {%- elif cookiecutter.publish_to == "artifactory" -%}
          {%- raw -%}
          ARTIFACTORY_URL: ${{ secrets.ARTIFACTORY_URL }}
          ARTIFACTORY_USERNAME: ${{ secrets.ARTIFACTORY_USERNAME }}
          ARTIFACTORY_PASSWORD: ${{ secrets.ARTIFACTORY_PASSWORD }}
          RELEASE_VERSION: ${{ steps.vars.outputs.tag }}
          {%- endraw -%}
          {%- endif %}
  {% endif %}
  {%- if cookiecutter.mkdocs == "y" %}
  deploy-docs:
    {%- if cookiecutter.publish_to != "none" %}
    needs: publish
    {%- endif %}
    runs-on: ubuntu-latest
    steps:
      - name: Check out
        uses: actions/checkout@v3

      - name: Set up the environment
        uses: ./.github/actions/setup-poetry-env

      - name: Deploy documentation
        run: poetry run mkdocs gh-deploy --force
  {% endif %}
